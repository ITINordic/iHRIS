{"version":3,"file":"js/ihris-es-report.4e10153c.js","mappings":"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","sources":["webpack://iHRIS-v5/./src/components/ihris/ihris-es-report.vue?0840","webpack://iHRIS-v5/src/components/ihris/ihris-es-report.vue","webpack://iHRIS-v5/./src/components/ihris/ihris-es-report.vue?8bc8","webpack://iHRIS-v5/../../../src/components/VCheckbox/VCheckbox.ts","webpack://iHRIS-v5/../../../src/components/VExpansionPanel/VExpansionPanel.ts","webpack://iHRIS-v5/../../../src/components/VExpansionPanel/VExpansionPanelContent.ts","webpack://iHRIS-v5/../../../src/components/VExpansionPanel/VExpansionPanelHeader.ts","webpack://iHRIS-v5/../../../src/components/VExpansionPanel/VExpansionPanels.ts","webpack://iHRIS-v5/./src/components/ihris/ihris-es-report.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{staticClass:\"py-5\"},[_c('v-card',{staticClass:\"py-4 px-2\"},[(!_vm.hideLabel)?_c('v-card-title',{staticClass:\"ma-4\"},[_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-icon',{staticClass:\"mr-2\",attrs:{\"color\":\"#0d3552\"}},[_vm._v(\"mdi-table-large\")]),_c('h4',{staticClass:\"font-weight-bold\",staticStyle:{\"color\":\"#0d3552\"}},[_vm._v(_vm._s(_vm.label))]),_c('v-spacer'),_c('v-row',{staticClass:\"pr-4\",attrs:{\"align\":\"center\",\"justify\":\"end\"}},[_c('v-btn',{staticClass:\"mr-2\",attrs:{\"color\":\"primary\"},on:{\"click\":function () {\n                _vm.dialog = true;\n              }}},[_c('v-icon',{attrs:{\"left\":\"\"}},[_vm._v(\"mdi-chart-box-plus-outline\")]),_vm._v(\" Customize Report \"+_vm._s(_vm.$t(\"App.hardcoded-texts.Customize Report\"))+\" \")],1),_c('v-btn',{attrs:{\"color\":\"info\"},on:{\"click\":function($event){return _vm.reportExport('csv')}}},[(_vm.downloading)?_c('v-progress-circular',{attrs:{\"color\":\"amber\",\"indeterminate\":\"\"}}):_c('v-icon',{attrs:{\"left\":\"\"}},[_vm._v(\"mdi-microsoft-excel\")]),_vm._v(\" \"+_vm._s(_vm.$t(\"App.hardcoded-texts.Export\"))+\" \")],1)],1)],1)],1):_vm._e(),_c('v-divider',{staticClass:\"my-2\"}),_c('v-expansion-panels',{staticClass:\"elevation-0\",attrs:{\"hover\":\"\"}},[_c('v-expansion-panel',[_c('v-expansion-panel-header',{attrs:{\"color\":\"blue-grey darken-2\"},scopedSlots:_vm._u([{key:\"actions\",fn:function(){return [_c('v-icon',{attrs:{\"color\":\"white\"}},[_vm._v(\" $expand \")])]},proxy:true}])},[_c('h3',{staticClass:\"font-weight-bold subtitle-2 white--text\"},[_c('v-icon',{staticClass:\"mr-2\",attrs:{\"color\":\"white\"}},[_vm._v(\"mdi-filter-variant\")]),_vm._v(\"Filters\")],1)]),_c('v-expansion-panel-content',[(!_vm.hideLabel)?_c('v-card-title',{staticClass:\"elevation-0\"},[_vm._t(\"default\")],2):_vm._e()],1)],1)],1),(_vm.error_message)?_c('v-card-subtitle',{staticClass:\"white--text error\"},[_vm._v(_vm._s(_vm.error_message)+\" \")]):_vm._e(),_c('v-data-table',{staticClass:\"elevation-1 mt-3\",staticStyle:{\"cursor\":\"pointer\"},attrs:{\"footer-props\":{ 'items-per-page-options': _vm.itemsPerPage },\"headers\":_vm.headers,\"items\":_vm.results,\"loading\":_vm.loading,\"options\":_vm.options,\"server-items-length\":_vm.total,\"show-select\":_vm.reportData.displayCheckbox && !_vm.hideCheckboxes,\"item-key\":\"id\"},on:{\"update:options\":function($event){_vm.options=$event}},model:{value:(_vm.selected),callback:function ($$v) {_vm.selected=$$v},expression:\"selected\"}})],1),_c('v-row',{attrs:{\"justify\":\"center\"}},[_c('v-dialog',{attrs:{\"max-width\":\"80%\",\"persistent\":\"\"},model:{value:(_vm.dialog),callback:function ($$v) {_vm.dialog=$$v},expression:\"dialog\"}},[_c('v-card',{staticClass:\"px-6 py-4\"},[_c('v-card-title',{staticClass:\"justify-center\"},[_c('span',{staticClass:\"text-h6\"},[_c('v-icon',{staticClass:\"mr-2\",attrs:{\"color\":\"primary\",\"large\":\"\"}},[_vm._v(\"mdi-table-check\")]),_vm._v(_vm._s(_vm.$t(\"App.hardcoded-texts.selectFeild\")))],1)]),_c('v-card-text',[_c('v-container',{attrs:{\"fluid\":\"\"}},[_c('v-row',_vm._l((_vm.allHeaders),function(item){return _c('v-col',{key:item.value,attrs:{\"cols\":\"12\",\"md\":\"4\",\"sm\":\"4\"}},[_c('v-checkbox',{attrs:{\"label\":item.text,\"value\":item.value,\"color\":\"primary\",\"hide-details\":\"\"},model:{value:(_vm.selectedColumns),callback:function ($$v) {_vm.selectedColumns=$$v},expression:\"selectedColumns\"}})],1)}),1)],1)],1),_c('v-card-actions',[_c('v-spacer'),_c('v-btn',{attrs:{\"color\":\"warning\"},on:{\"click\":function () {\n                _vm.dialog = false;\n              }}},[_c('v-icon',{attrs:{\"left\":\"\"}},[_vm._v(\"mdi-close-box-multiple\")]),_vm._v(\" \"+_vm._s(_vm.$t(\"App.hardcoded-texts.Close\"))+\" \")],1),_c('v-btn',{attrs:{\"color\":\"warning\"},on:{\"click\":_vm.reset}},[_c('v-icon',{attrs:{\"left\":\"\"}},[_vm._v(\"mdi-close-box-multiple\")]),_vm._v(\" \"+_vm._s(_vm.$t(\"App.hardcoded-texts.Reset\"))+\" \")],1),_c('v-btn',{attrs:{\"color\":\"primary\"},on:{\"click\":_vm.onFilter}},[_c('v-icon',{attrs:{\"left\":\"\"}},[_vm._v(\"mdi-content-save-check-outline\")]),_vm._v(\" \"+_vm._s(_vm.$t(\"App.hardcoded-texts.Apply\"))+\" \")],1)],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-container class=\"py-5\">\n    <v-card class=\"py-4 px-2\">\n      <v-card-title v-if=\"!hideLabel\" class=\"ma-4\">\n        <v-layout row wrap>\n          <v-icon class=\"mr-2\" color=\"#0d3552\">mdi-table-large</v-icon>\n          <h4 class=\"font-weight-bold\" style=\"color: #0d3552\">{{ label }}</h4>\n          <v-spacer></v-spacer>\n          <v-row align=\"center\" class=\"pr-4\" justify=\"end\">\n            <v-btn\n              class=\"mr-2\"\n              color=\"primary\"\n              @click=\"\n                () => {\n                  dialog = true;\n                }\n              \"\n            >\n              <v-icon left>mdi-chart-box-plus-outline</v-icon>\n              Customize Report\n              {{ $t(\"App.hardcoded-texts.Customize Report\") }}\n            </v-btn>\n            <v-btn color=\"info\" @click=\"reportExport('csv')\">\n              <v-progress-circular\n                v-if=\"downloading\"\n                color=\"amber\"\n                indeterminate\n              ></v-progress-circular>\n              <v-icon v-else left>mdi-microsoft-excel</v-icon>\n              {{ $t(\"App.hardcoded-texts.Export\") }}\n            </v-btn>\n          </v-row>\n        </v-layout>\n      </v-card-title>\n      <v-divider class=\"my-2\"></v-divider>\n      <v-expansion-panels hover class=\"elevation-0\">\n        <v-expansion-panel>\n          <v-expansion-panel-header color=\"blue-grey darken-2\">\n            <h3 class=\"font-weight-bold subtitle-2 white--text\"><v-icon color=\"white\" class=\"mr-2\">mdi-filter-variant</v-icon>Filters</h3>\n            <template v-slot:actions>\n              <v-icon color=\"white\">\n                $expand\n              </v-icon>\n            </template>\n          </v-expansion-panel-header>\n          <v-expansion-panel-content>\n            <v-card-title class=\"elevation-0\" v-if=\"!hideLabel\">\n              <slot></slot>\n            </v-card-title>\n          </v-expansion-panel-content>\n        </v-expansion-panel>\n      </v-expansion-panels>\n      <v-card-subtitle v-if=\"error_message\" class=\"white--text error\"\n      >{{ error_message }}\n      </v-card-subtitle>\n      <v-data-table\n        v-model=\"selected\"\n        :footer-props=\"{ 'items-per-page-options': itemsPerPage }\"\n        :headers=\"headers\"\n        :items=\"results\"\n        :loading=\"loading\"\n        :options.sync=\"options\"\n        :server-items-length=\"total\"\n        :show-select=\"reportData.displayCheckbox && !hideCheckboxes\"\n        class=\"elevation-1 mt-3\"\n        item-key=\"id\"\n        style=\"cursor: pointer\"\n      ></v-data-table>\n    </v-card>\n    <v-row justify=\"center\">\n      <v-dialog v-model=\"dialog\" max-width=\"80%\" persistent>\n        <v-card class=\"px-6 py-4\">\n          <v-card-title class=\"justify-center\">\n            <span class=\"text-h6\"\n            ><v-icon class=\"mr-2\" color=\"primary\" large\n            >mdi-table-check</v-icon\n            >{{ $t(\"App.hardcoded-texts.selectFeild\") }}</span\n            >\n          </v-card-title>\n          <v-card-text>\n            <v-container fluid>\n              <v-row>\n                <v-col\n                  v-for=\"item in allHeaders\"\n                  :key=\"item.value\"\n                  cols=\"12\"\n                  md=\"4\"\n                  sm=\"4\"\n                >\n                  <!-- {{item}} -->\n                  <v-checkbox\n                    v-model=\"selectedColumns\"\n                    :label=\"item.text\"\n                    :value=\"item.value\"\n                    color=\"primary\"\n                    hide-details\n                  ></v-checkbox>\n                </v-col>\n              </v-row>\n            </v-container>\n          </v-card-text>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn\n              color=\"warning\"\n              @click=\"\n                () => {\n                  dialog = false;\n                }\n              \"\n            >\n              <v-icon left>mdi-close-box-multiple</v-icon>\n              {{ $t(\"App.hardcoded-texts.Close\") }}\n            </v-btn>\n            <v-btn color=\"warning\" @click=\"reset\">\n              <v-icon left>mdi-close-box-multiple</v-icon>\n              {{ $t(\"App.hardcoded-texts.Reset\") }}\n            </v-btn>\n            <v-btn color=\"primary\" @click=\"onFilter\">\n              <v-icon left>mdi-content-save-check-outline</v-icon>\n              {{ $t(\"App.hardcoded-texts.Apply\") }}\n            </v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport { eventBus } from \"@/main\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"ihris-report\",\n  props: [\n    \"reportData\",\n    \"label\",\n    \"terms\",\n    \"termsConditions\",\n    \"dataURL\",\n    \"page\",\n    \"hideCheckboxes\",\n    \"hideLabel\",\n  ],\n  data: function () {\n    return {\n      debug: \"\",\n      downloading: false,\n      headers: [],\n      allHeaders: [],\n      results: [],\n      selectedColumns: [],\n      options: { itemsPerPage: 10 },\n      loading: false,\n      total: 0,\n      prevPage: -1,\n      link: [],\n      selected: [],\n      error_message: null,\n      selectAll: false,\n      //custom report\n      dialog: false,\n    };\n  },\n  watch: {\n    selected() {\n      if (this.selected.length !== this.results.length && this.selectAll) {\n        this.selectAll = false;\n      }\n      eventBus.$emit(\n        \"ihris-report-selections\",\n        this.selected,\n        this.reportData,\n        this.terms,\n        this.termsConditions,\n        this.selectAll\n      );\n    },\n    terms: {\n      handler() {\n        this.selectAll = false;\n        this.getTotalRecords();\n        this.getData(true);\n        eventBus.$emit(\"changedTerms\", this.terms);\n      },\n      deep: true,\n    },\n    termsConditions: {\n      handler() {\n        if (Object.keys(this.terms).length > 0) {\n          this.selectAll = false;\n          this.getTotalRecords();\n          this.getData(true);\n        }\n      },\n      deep: true,\n    },\n    options: {\n      handler() {\n        this.getTotalRecords();\n        this.getData();\n      },\n      deep: true,\n    },\n  },\n  computed: {\n    itemsPerPage() {\n      let items = [5, 10, 20, 50];\n      return items;\n    },\n  },\n  created: function () {\n    //sorting columns\n    if(this.reportData && this.reportData.fieldsDetails) {\n      this.reportData.fieldsDetails.sort((a, b) => {\n        if((a[2] != null && b[2] == null) || (a[2] != null && b[2] != null && a[2] < b[2])) {\n          return -1\n        } else if((b[2] != null && a[2] == null) || (a[2] != null && b[2] != null && a[2] > b[2])) {\n          return 1\n        } else {\n          return -1\n        }\n      })\n    }\n    for (let field of this.reportData.fieldsDetails) {\n      this.headers.push({ text: field[0], value: field[1] });\n      this.allHeaders.push({ text: field[0], value: field[1] });\n    }\n    eventBus.$on(\"reload-report\", () => {\n      this.getTotalRecords();\n      this.getData();\n    });\n    eventBus.$on(\"mhero-select-all\", () => {\n      this.selected = [];\n      this.selected = this.results;\n      this.selectAll = true;\n    });\n  },\n  methods: {\n    reset() {\n      this.headers = this.allHeaders;\n      this.dialog = false;\n    },\n    onFilter() {\n      this.dialog = false;\n      this.headers = this.allHeaders.filter((item) => {\n        if (this.selectedColumns.includes(item.value)) {\n          return item;\n        }\n      });\n    },\n    clickIt: function (record) {\n      this.$router.push({\n        name: \"resource_view\",\n        params: { page: this.page, id: record.id },\n      });\n    },\n    buildTerms() {\n      let body = {};\n      body = {\n        query: {\n          bool: {\n            must: [],\n            must_not: [],\n          },\n        },\n      };\n      let sTermDet;\n      if (Object.keys(this.terms).length > 0) {\n        for (let sTerm in this.terms) {\n          if (!this.terms[sTerm] || this.terms[sTerm].length === 0) {\n            continue;\n          }\n          sTermDet = this.reportData.filters.find((filter) => {\n            return filter.field === sTerm;\n          });\n\n          if (!sTermDet.isDropDown) {\n            this.terms[sTerm] = this.terms[sTerm].replace(/\\s+/g, \" \").trim();\n          }\n\n          let esFieldName;\n          if (sTermDet.isDropDown) {\n            esFieldName = sTerm + \".keyword\";\n          } else {\n            esFieldName = sTerm;\n          }\n          if (Array.isArray(this.terms[sTerm])) {\n            let terms = {\n              terms: {},\n            };\n            terms.terms[esFieldName] = [];\n            for (let value of this.terms[sTerm]) {\n              terms.terms[esFieldName].push(value);\n            }\n            if (this.termsConditions[sTerm] === \"exclude\") {\n              body.query.bool.must_not.push(terms);\n            } else {\n              body.query.bool.must.push(terms);\n            }\n          } else {\n            if (!sTermDet.isDropDown) {\n              let termArr = this.terms[sTerm].split(\" \");\n              for (let tm of termArr) {\n                let query = {};\n                if (\n                  this.reportData.mappings.mappings.properties[esFieldName] &&\n                  this.reportData.mappings.mappings.properties[esFieldName]\n                    .type === \"text\"\n                ) {\n                  query.wildcard = {};\n                  query.wildcard[esFieldName] = tm + \"*\";\n                } else {\n                  query.term = {};\n                  query.term[esFieldName] = tm;\n                }\n                if (this.termsConditions[sTerm] === \"exclude\") {\n                  body.query.bool.must_not.push(query);\n                } else {\n                  body.query.bool.must.push(query);\n                }\n              }\n            } else {\n              let terms = {\n                terms: {},\n              };\n              terms.terms[esFieldName] = [this.terms[sTerm]];\n              if (this.termsConditions[sTerm] === \"exclude\") {\n                body.query.bool.must_not.push(terms);\n              } else {\n                body.query.bool.must.push(terms);\n              }\n            }\n          }\n        }\n      }\n\n      if (sTermDet && sTermDet.field) {\n        if (sTermDet.field == \"startDate\" || sTermDet.field == \"endDate\") {\n          let defEndDate = new Date().toISOString().slice(0, 10);\n          let defStartDate;\n          if (sTermDet.field == \"startDate\") {\n            defStartDate = this.terms.startDate;\n          }\n          if (sTermDet.field == \"endDate\") {\n            defEndDate = this.terms.endDate;\n          }\n\n          body = {\n            query: {\n              bool: {\n                filter: [\n                  {\n                    range: {\n                      startDate: {\n                        gte: defStartDate,\n                      },\n                    },\n                  },\n                  {\n                    range: {\n                      endDate: {\n                        lte: defEndDate,\n                      },\n                    },\n                  },\n                ],\n              },\n            },\n          };\n        }\n      }\n\n      eventBus.$emit(\"builtESTerms\", body);\n      return body;\n    },\n    getTotalRecords() {\n      let url = `/es/${this.reportData.indexName}/_count`;\n\n      let body = this.buildTerms();\n\n      body.reportOptions = {\n        locationBasedConstraint: this.reportData.locationBasedConstraint,\n      };\n\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n      }).then((response) => {\n        response.json().then((data) => {\n          this.total = data.count;\n          eventBus.$emit(\"report-total-records\", this.total);\n        });\n      });\n    },\n    getData(restart) {\n      this.loading = true;\n      this.error_message = null;\n      let url = \"\";\n      if (restart) this.options.page = 1;\n      let count = this.options.itemsPerPage || 10;\n      if (count === -1) {\n        count = this.total;\n      }\n      let from =\n        this.options.page * this.options.itemsPerPage -\n        this.options.itemsPerPage;\n      url = `/es/${this.reportData.indexName}/_search?size=${count}&from=${from}`;\n      this.prevPage = this.options.page;\n      let body = this.buildTerms();\n\n      body.reportOptions = {\n        locationBasedConstraint: true,\n      };\n      let sorting = [];\n      for (let index in this.options.sortBy) {\n        let sortCol = this.options.sortBy[index];\n        let sort = {};\n        let sortColESName;\n        if (\n          this.reportData.mappings.mappings.properties[sortCol] &&\n          this.reportData.mappings.mappings.properties[sortCol].type === \"text\"\n        ) {\n          sortColESName = sortCol + \".keyword\";\n        } else {\n          sortColESName = sortCol;\n        }\n        if (this.options.sortDesc[index]) {\n          sort[sortColESName] = \"desc\";\n        } else {\n          sort[sortColESName] = \"asc\";\n        }\n        sorting.push(sort);\n      }\n      body.sort = sorting;\n\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n      })\n        .then((response) => {\n          response\n            .json()\n            .then((data) => {\n              this.results = [];\n              if (data.hits.total.value > 0) {\n                this.link = data.link;\n                for (let hit of data.hits.hits) {\n                  let result = {};\n                  for (let field in hit[\"_source\"]) {\n                    result[field] = hit[\"_source\"][field];\n                  }\n                  result.id = hit[\"_id\"];\n                  this.results.push(result);\n                }\n              }\n              if (this.selectAll) {\n                this.selected = this.results;\n              }\n              //  else {\n              //   this.selected = []\n              // }\n              this.loading = false;\n            })\n            .catch((err) => {\n              this.loading = false;\n              this.error_message = \"Unable to load results.\";\n              console.log(err);\n            });\n        })\n        .catch((err) => {\n          this.loading = false;\n          this.error_message = \"Unable to load results.\";\n          console.log(err);\n        });\n    },\n    reportExport(format) {\n      this.downloading = true;\n      let url = `/es/export/${format}/${this.reportData.indexName}`;\n      let body = {\n        query: this.buildTerms(),\n        headers: this.headers,\n        label: this.label,\n        selected: this.selected,\n      };\n      axios({\n        url: url,\n        method: \"POST\",\n        responseType: \"blob\",\n        data: body,\n      }).then((response) => {\n        this.downloading = false;\n        let blob = new Blob([response.data], { type: \"text/csv\" });\n        let link = document.createElement(\"a\");\n        link.href = window.URL.createObjectURL(blob);\n        link.download = `${this.label}.${format}`;\n        link.click();\n      });\n    },\n  },\n};\n</script>\n<style>\ntbody tr:nth-of-type(even) {\n  background-color: #E0F2F1;\n}\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ihris-es-report.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ihris-es-report.vue?vue&type=script&lang=js&\"","// Styles\nimport './VCheckbox.sass'\nimport '../../styles/components/_selection-controls.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport VInput from '../VInput'\n\n// Mixins\nimport Selectable from '../../mixins/selectable'\n\n/* @vue/component */\nexport default Selectable.extend({\n  name: 'v-checkbox',\n\n  props: {\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n  },\n\n  data () {\n    return {\n      inputIndeterminate: this.indeterminate,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls': true,\n        'v-input--checkbox': true,\n        'v-input--indeterminate': this.inputIndeterminate,\n      }\n    },\n    computedIcon (): string {\n      if (this.inputIndeterminate) {\n        return this.indeterminateIcon\n      } else if (this.isActive) {\n        return this.onIcon\n      } else {\n        return this.offIcon\n      }\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState (): string | undefined {\n      if (this.isDisabled && !this.inputIndeterminate) return undefined\n      if (this.hasError && this.shouldValidate) return 'error'\n      if (this.hasSuccess) return 'success'\n      if (this.hasColor !== null) return this.computedColor\n      return undefined\n    },\n  },\n\n  watch: {\n    indeterminate (val) {\n      // https://github.com/vuetifyjs/vuetify/issues/8270\n      this.$nextTick(() => (this.inputIndeterminate = val))\n    },\n    inputIndeterminate (val) {\n      this.$emit('update:indeterminate', val)\n    },\n    isActive () {\n      if (!this.indeterminate) return\n      this.inputIndeterminate = false\n    },\n  },\n\n  methods: {\n    genCheckbox () {\n      const { title, ...checkboxAttrs } = this.attrs$\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input',\n      }, [\n        this.$createElement(VIcon, this.setTextColor(this.validationState, {\n          props: {\n            dense: this.dense,\n            dark: this.dark,\n            light: this.light,\n          },\n        }), this.computedIcon),\n        this.genInput('checkbox', {\n          ...checkboxAttrs,\n          'aria-checked': this.inputIndeterminate\n            ? 'mixed'\n            : this.isActive.toString(),\n        }),\n        this.genRipple(this.setTextColor(this.rippleState)),\n      ])\n    },\n    genDefaultSlot () {\n      return [\n        this.genCheckbox(),\n        this.genLabel(),\n      ]\n    },\n  },\n})\n","// Components\nimport VExpansionPanels from './VExpansionPanels'\nimport VExpansionPanelHeader from './VExpansionPanelHeader'\nimport VExpansionPanelContent from './VExpansionPanelContent'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VExpansionPanelHeaderInstance = InstanceType<typeof VExpansionPanelHeader>\ntype VExpansionPanelContentInstance = InstanceType<typeof VExpansionPanelContent>\n\nexport default mixins(\n  GroupableFactory<'expansionPanels', typeof VExpansionPanels>('expansionPanels', 'v-expansion-panel', 'v-expansion-panels'),\n  RegistrableProvide('expansionPanel', true)\n  /* @vue/component */\n).extend({\n  name: 'v-expansion-panel',\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n  },\n\n  data () {\n    return {\n      content: null as VExpansionPanelContentInstance | null,\n      header: null as VExpansionPanelHeaderInstance | null,\n      nextIsActive: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel--active': this.isActive,\n        'v-expansion-panel--next-active': this.nextIsActive,\n        'v-expansion-panel--disabled': this.isDisabled,\n        ...this.groupClasses,\n      }\n    },\n    isDisabled (): boolean {\n      return this.expansionPanels.disabled || this.disabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanels.readonly || this.readonly\n    },\n  },\n\n  methods: {\n    registerContent (vm: VExpansionPanelContentInstance) {\n      this.content = vm\n    },\n    unregisterContent () {\n      this.content = null\n    },\n    registerHeader (vm: VExpansionPanelHeaderInstance) {\n      this.header = vm\n      vm.$on('click', this.onClick)\n    },\n    unregisterHeader () {\n      this.header = null\n    },\n    onClick (e: MouseEvent) {\n      if (e.detail) this.header!.$el.blur()\n\n      this.$emit('click', e)\n\n      this.isReadonly || this.isDisabled || this.toggle()\n    },\n    toggle () {\n      this.$nextTick(() => this.$emit('change'))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes,\n      attrs: {\n        'aria-expanded': String(this.isActive),\n      },\n    }, getSlot(this))\n  },\n})\n","// Components\nimport VExpansionPanel from './VExpansionPanel'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-content',\n\n  data: () => ({\n    isActive: false,\n  }),\n\n  computed: {\n    parentIsActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n  },\n\n  watch: {\n    parentIsActive: {\n      immediate: true,\n      handler (val, oldVal) {\n        if (val) this.isBooted = true\n\n        if (oldVal == null) this.isActive = val\n        else this.$nextTick(() => this.isActive = val)\n      },\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerContent(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterContent()\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, this.showLazyContent(() => [\n      h('div', this.setBackgroundColor(this.color, {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }), [\n        h('div', { class: 'v-expansion-panel-content__wrap' }, getSlot(this, 'default', { open: this.isActive })),\n      ]),\n    ]))\n  },\n})\n","// Components\nimport { VFadeTransition } from '../transitions'\nimport VExpansionPanel from './VExpansionPanel'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-header', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-header',\n\n  directives: { ripple },\n\n  props: {\n    disableIconRotate: Boolean,\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n    hideActions: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: false,\n    },\n  },\n\n  data: () => ({\n    hasMousedown: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel-header--active': this.isActive,\n        'v-expansion-panel-header--mousedown': this.hasMousedown,\n      }\n    },\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n    isDisabled (): boolean {\n      return this.expansionPanel.isDisabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanel.isReadonly\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerHeader(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterHeader()\n  },\n\n  methods: {\n    onClick (e: MouseEvent) {\n      this.$emit('click', e)\n    },\n    genIcon () {\n      const icon = getSlot(this, 'actions', { open: this.isActive }) ||\n        [this.$createElement(VIcon, this.expandIcon)]\n\n      return this.$createElement(VFadeTransition, [\n        this.$createElement('div', {\n          staticClass: 'v-expansion-panel-header__icon',\n          class: {\n            'v-expansion-panel-header__icon--disable-rotate': this.disableIconRotate,\n          },\n          directives: [{\n            name: 'show',\n            value: !this.isDisabled,\n          }],\n        }, icon),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('button', this.setBackgroundColor(this.color, {\n      staticClass: 'v-expansion-panel-header',\n      class: this.classes,\n      attrs: {\n        tabindex: this.isDisabled ? -1 : null,\n        type: 'button',\n        'aria-expanded': this.isActive,\n      },\n      directives: [{\n        name: 'ripple',\n        value: this.ripple,\n      }],\n      on: {\n        ...this.$listeners,\n        click: this.onClick,\n        mousedown: () => (this.hasMousedown = true),\n        mouseup: () => (this.hasMousedown = false),\n      },\n    }), [\n      getSlot(this, 'default', { open: this.isActive }, true),\n      this.hideActions || this.genIcon(),\n    ])\n  },\n})\n","// Styles\nimport './VExpansionPanel.sass'\n\n// Components\nimport { BaseItemGroup, GroupableInstance } from '../VItemGroup/VItemGroup'\nimport VExpansionPanel from './VExpansionPanel'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\ninterface VExpansionPanelInstance extends InstanceType<typeof VExpansionPanel> {}\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n\n  provide (): object {\n    return {\n      expansionPanels: this,\n    }\n  },\n\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--flat': this.flat,\n        'v-expansion-panels--hover': this.hover,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n        'v-expansion-panels--tile': this.tile,\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this)\n    }\n\n    /* istanbul ignore next */\n    if (\n      Array.isArray(this.value) &&\n      this.value.length > 0 &&\n      typeof this.value[0] === 'boolean'\n    ) {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this)\n    }\n  },\n\n  methods: {\n    updateItem (item: GroupableInstance & VExpansionPanelInstance, index: number) {\n      const value = this.getValue(item, index)\n      const nextValue = this.getValue(item, index + 1)\n\n      item.isActive = this.toggleMethod(value)\n      item.nextIsActive = this.toggleMethod(nextValue)\n    },\n  },\n})\n","import { render, staticRenderFns } from \"./ihris-es-report.vue?vue&type=template&id=d430c418&\"\nimport script from \"./ihris-es-report.vue?vue&type=script&lang=js&\"\nexport * from \"./ihris-es-report.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ihris-es-report.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardActions } from 'vuetify/lib/components/VCard';\nimport { VCardSubtitle } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VCheckbox } from 'vuetify/lib/components/VCheckbox';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VDataTable } from 'vuetify/lib/components/VDataTable';\nimport { VDialog } from 'vuetify/lib/components/VDialog';\nimport { VDivider } from 'vuetify/lib/components/VDivider';\nimport { VExpansionPanel } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelContent } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelHeader } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanels } from 'vuetify/lib/components/VExpansionPanel';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VLayout } from 'vuetify/lib/components/VGrid';\nimport { VProgressCircular } from 'vuetify/lib/components/VProgressCircular';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VBtn,VCard,VCardActions,VCardSubtitle,VCardText,VCardTitle,VCheckbox,VCol,VContainer,VDataTable,VDialog,VDivider,VExpansionPanel,VExpansionPanelContent,VExpansionPanelHeader,VExpansionPanels,VIcon,VLayout,VProgressCircular,VRow,VSpacer})\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","hideLabel","_e","attrs","_v","staticStyle","_s","label","on","dialog","$t","$event","reportExport","scopedSlots","_u","key","fn","proxy","_t","error_message","itemsPerPage","headers","results","loading","options","total","reportData","displayCheckbox","hideCheckboxes","model","value","callback","$$v","selected","expression","_l","item","text","selectedColumns","reset","onFilter","staticRenderFns","name","props","data","debug","downloading","allHeaders","prevPage","link","selectAll","watch","eventBus","terms","handler","deep","termsConditions","computed","created","methods","clickIt","params","page","id","buildTerms","body","query","bool","must","must_not","sTermDet","esFieldName","type","defStartDate","defEndDate","filter","range","startDate","gte","endDate","lte","getTotalRecords","locationBasedConstraint","fetch","method","then","response","getData","count","url","sortColESName","sort","sorting","json","result","catch","err","console","axios","responseType","Selectable","indeterminate","Boolean","indeterminateIcon","String","default","offIcon","onIcon","inputIndeterminate","classes","VInput","computedIcon","isActive","validationState","isDisabled","hasError","shouldValidate","hasSuccess","hasColor","computedColor","val","$nextTick","$emit","genCheckbox","title","checkboxAttrs","attrs$","VIcon","setTextColor","dense","dark","light","genInput","toString","genRipple","rippleState","genDefaultSlot","genLabel","mixins","GroupableFactory","RegistrableProvide","extend","disabled","readonly","content","header","nextIsActive","groupClasses","expansionPanels","isReadonly","registerContent","vm","unregisterContent","registerHeader","$on","onClick","unregisterHeader","e","detail","$el","blur","toggle","h","class","getSlot","baseMixins","Bootable","Colorable","RegistrableInject","parentIsActive","expansionPanel","immediate","oldVal","isBooted","beforeDestroy","VExpandTransition","showLazyContent","setBackgroundColor","color","directives","open","ripple","disableIconRotate","expandIcon","hideActions","Object","hasMousedown","genIcon","icon","VFadeTransition","tabindex","$listeners","click","mousedown","mouseup","BaseItemGroup","provide","accordion","flat","hover","focusable","inset","popout","tile","$attrs","hasOwnProperty","breaking","Array","isArray","length","updateItem","index","getValue","nextValue","toggleMethod","component","VBtn"],"sourceRoot":""}